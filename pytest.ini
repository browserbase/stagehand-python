[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async settings
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Coverage settings
addopts = 
    --cov=stagehand
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=75
    --strict-markers
    --strict-config
    -ra
    --tb=short

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests requiring multiple components
    e2e: End-to-end tests with full workflows
    slow: Tests that take longer to run
    browserbase: Tests requiring Browserbase connection
    local: Tests for local browser functionality
    llm: Tests involving LLM interactions
    mock: Tests using mock objects only
    performance: Performance and load tests
    smoke: Quick smoke tests for basic functionality

# Filterwarnings to reduce noise
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pytest_asyncio
    ignore::RuntimeWarning

# Minimum version requirements
minversion = 7.0

# Test discovery patterns
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    __pycache__
    .pytest_cache
    htmlcov
    .coverage*

# Timeout for individual tests (in seconds)
timeout = 300

# Console output settings
console_output_style = progress
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# JUnit XML output for CI
junit_family = xunit2 